plugin.tx_cart {
    persistence {
        classes {
            Extcode\Cart\Domain\Model\Category {
                mapping {
                    tableName = sys_category
                }
            }
        }
    }
}

page.includeCSS.tx_cart = EXT:cart/Resources/Public/Stylesheets/cart.css
page.includeJSFooter.tx_cart = EXT:cart/Resources/Public/JavaScripts/cart.js

plugin.tx_cart {

    view {
        templateRootPaths {
            0 = {$plugin.tx_cart.view.default.templateRootPath}
        }
        partialRootPaths {
            0 = {$plugin.tx_cart.view.default.partialRootPath}
        }
        layoutRootPaths {
            0 = {$plugin.tx_cart.view.default.layoutRootPath}
        }
    }

    persistence {
        storagePid = {$plugin.tx_cart.persistence.storagePid}
    }

    settings {
        cart {
            pid = {$plugin.tx_cart.settings.cart.pid}
            isNetCart = {$plugin.tx_cart.settings.cart.isNetCart}
        }

        order {
            pid = {$plugin.tx_cart.settings.order.pid}
        }

        format.currency {
            currencySign       = {$plugin.tx_cart.settings.format.currency.currencySign}
            decimalSeparator   = {$plugin.tx_cart.settings.format.currency.decimalSeparator}
            thousandsSeparator = {$plugin.tx_cart.settings.format.currency.thousandsSeparator}
            prependCurrency    = {$plugin.tx_cart.settings.format.currency.prependCurrency}
            separateCurrency   = {$plugin.tx_cart.settings.format.currency.separateCurrency}
            decimals           = {$plugin.tx_cart.settings.format.currency.decimals}
        }

        showAction {
            media {
                image {
                    size {
                        small.maxWidth = 100
                        small.maxHeight =
                        medium.maxWidth = 300
                        medium.maxHeight =
                        large.maxWidth = 600
                        large.maxHeight =
                    }
                }
            }
        }
        teaserAction < .showAction
        listAction < .showAction

        showCartAction {
            validation {
                fields {
                    acceptTerms = {$plugin.tx_cart.validation.fields.acceptTerms}
                    acceptConditions = {$plugin.tx_cart.validation.fields.acceptConditions}
                }
            }
            summary {
                fields {
                    cart.net = true
                    cart.taxes = true
                    discount.gross = true
                    service.gross = true
                    total.gross = true
                }
            }
        }
    }

    validation {
        orderCartAction {
            fields {
                acceptTerms = {$plugin.tx_cart.validation.fields.acceptTerms}
                acceptConditions = {$plugin.tx_cart.validation.fields.acceptConditions}
            }
        }
    }

    db {
        tableName   = {$plugin.tx_cart.db.tableName}
        l10n_parent = {$plugin.tx_cart.db.l10n_parent}

        fields {
            title               = {$plugin.tx_cart.db.fields.title}
            price               = {$plugin.tx_cart.db.fields.price}
            inheritPrice        = {$plugin.tx_cart.db.fields.inheritPrice}
            taxClassId          = {$plugin.tx_cart.db.fields.taxClassId}
            sku                 = {$plugin.tx_cart.db.fields.sku}
            serviceAttribute1   = {$plugin.tx_cart.db.fields.serviceAttribute1}
            serviceAttribute2   = {$plugin.tx_cart.db.fields.serviceAttribute2}
            serviceAttribute3   = {$plugin.tx_cart.db.fields.serviceAttribute3}
            hasFeVariants       = {$plugin.tx_cart.db.fields.hasFeVariants}
            additional {
            }
        }

        variants {
            db {
                table             = {$plugin.tx_cart.db.variants.db.table}
                fields {
                    title             = {$plugin.tx_cart.db.variants.db.title}
                    price             = {$plugin.tx_cart.db.variants.db.price}
                    priceCalcMethod   = {$plugin.tx_cart.db.variants.db.priceCalcMethod}
                    inheritPrice      = {$plugin.tx_cart.db.variants.db.inheritPrice}
                    sku               = {$plugin.tx_cart.db.variants.db.sku}
                    hasFeVariants     = {$plugin.tx_cart.db.variants.db.hasFeVariants}
                    taxClassId        = {$plugin.tx_cart.db.variants.db.taxClassId}
                }
            }
        }
    }

    gpValues {
        productId     = {$plugin.tx_cart.gpValues.productId}
        tableId       = {$plugin.tx_cart.gpValues.tableId}
        repositoryId  = {$plugin.tx_cart.gpValues.repositoryId}
        contentId     = {$plugin.tx_cart.gpValues.contentId}
        quantity      = {$plugin.tx_cart.gpValues.quantity}

        beVariants.1  = {$plugin.tx_cart.gpValues.beVariants.1}
        beVariants.2  = {$plugin.tx_cart.gpValues.beVariants.2}
        beVariants.3  = {$plugin.tx_cart.gpValues.beVariants.3}
        multiple      = {$plugin.tx_cart.gpValues.multiple}
    }

    taxClasses {
        1 {
            value = {$plugin.tx_cart.taxClasses.1.value}
            calc = {$plugin.tx_cart.taxClasses.1.calc}
            name = {$plugin.tx_cart.taxClasses.1.name}
        }
        2 {
            value = {$plugin.tx_cart.taxClasses.2.value}
            calc = {$plugin.tx_cart.taxClasses.2.calc}
            name = {$plugin.tx_cart.taxClasses.2.name}
        }
        3 {
            value = {$plugin.tx_cart.taxClasses.3.value}
            calc = {$plugin.tx_cart.taxClasses.3.calc}
            name = {$plugin.tx_cart.taxClasses.3.name}
        }
    }

    shippings {
        preset = 1
        options {
            1 {
                title = Standard
                extra = 0.00
                taxClassId = 1
                status = open
            }
        }
    }

    payments {
        preset = 1
        options {
            1 {
                title = Vorkasse
                extra = 0.00
                taxClassId = 1
                status = open
            }
        }
    }

    orderNumber = COA
    orderNumber {
        10 = TEXT
        10.value = {$plugin.tx_cart.orderNumber.prefix}

        20 = TEXT
        20.current = 1
        20.setCurrent.field = orderNumber
        20.setCurrent.wrap = | + {$plugin.tx_cart.orderNumber.offset}
        20.prioriCalc = intval

        30 = TEXT
        30.value = {$plugin.tx_cart.orderNumber.suffix}
    }

    invoiceNumber = COA
    invoiceNumber {
        10 = TEXT
        10.value = {$plugin.tx_cart.invoiceNumber.prefix}

        20 = TEXT
        20.current = 1
        20.setCurrent.field = invoiceNumber
        20.setCurrent.wrap = | + {$plugin.tx_cart.invoiceNumber.offset}
        20.prioriCalc = intval

        30 = TEXT
        30.value = {$plugin.tx_cart.invoiceNumber.suffix}
    }

}

plugin.tx_cart {
    db >

    repository {
        class = {$plugin.tx_cart.products.repository.class}
        fields {
            getMinNumber        = {$plugin.tx_cart.products.repository.fields.getMinNumberInOrder}
            getMaxNumber        = {$plugin.tx_cart.products.repository.fields.getMaxNumberInOrder}
            getSpecialPrice     = {$plugin.tx_cart.products.repository.fields.getSpecialPrice}
            getFeVariants       = {$plugin.tx_cart.products.repository.fields.getFeVariants}
        }

        beVariants {
            repository {
                class = {$plugin.tx_cart.products.repository.beVariants.repository.class}
            }
        }
    }

    gpValues {
        beVariants {
            1 = beVariants|1
        }
    }
}

# use this lib to add custom information or content elements to your email template
lib.cartMailHeader = COA
lib.cartMailHeader {
}

# use this lib to add custom information or content elements to your email template
lib.cartMailFooter = COA
lib.cartMailFooter {
}